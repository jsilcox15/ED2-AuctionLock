{"version":3,"file":"component---src-templates-tag-js-f0c0b8025d4b06f8c67b.js","mappings":"oLAkDA,UApCY,SAAH,GAAyC,IAAnCA,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAqB,EAAXC,YACfF,EAAKG,SACHH,EAAKI,aAAaC,MAEhC,OACI,gCACI,gBAAC,IAAQ,CAACL,KAAMA,EAAMC,SAAUA,EAAUK,KAAK,WAC/C,gBAAC,KAAM,KACH,uBAAKC,UAAU,aACX,2BAASA,UAAU,UAAUC,MAAO,CAAEC,UAAU,WAC5C,sBAAIF,UAAU,iBAAgB,aAC9B,2BAASA,UAAU,gBAAe,mBACV,gBAAC,EAAAG,KAAI,CAACC,GAAG,KAAI,eAAkB,qBAQ/E,C","sources":["webpack://gatsby-starter-ghost/./src/templates/tag.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport { Link } from \"gatsby\";\r\n\r\nimport { Layout, PostCard, Pagination } from \"../components/common\";\r\nimport { MetaData } from \"../components/common/meta\";\r\n\r\n/**\r\n * Tag page (/tag/:slug)\r\n *\r\n * Loads all posts for the requested tag incl. pagination.\r\n *\r\n */\r\nconst Tag = ({ data, location, pageContext }) => {\r\n    const tag = data.ghostTag;\r\n    const posts = data.allGhostPost.edges;\r\n\r\n    return (\r\n        <>\r\n            <MetaData data={data} location={location} type=\"series\" />\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <article className=\"content\" style={{ textAlign: `center` }}>\r\n                        <h1 className=\"content-title\">Error 404</h1>\r\n                        <section className=\"content-body\">\r\n                                Page not found, <Link to=\"/\">return home</Link> to start\r\n                                over\r\n                        </section>\r\n                    </article>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nTag.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostTag: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            description: PropTypes.string,\r\n        }),\r\n        allGhostPost: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n};\r\n\r\nexport default Tag;\r\n\r\nexport const pageQuery = graphql`\r\n    query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\r\n        ghostTag(slug: { eq: $slug }) {\r\n            ...GhostTagFields\r\n        }\r\n        allGhostPost(\r\n            sort: { order: DESC, fields: [published_at] }\r\n            filter: { tags: { elemMatch: { slug: { eq: $slug } } } }\r\n            limit: $limit\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                    ...GhostPostFields\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"names":["data","location","pageContext","ghostTag","allGhostPost","edges","type","className","style","textAlign","Link","to"],"sourceRoot":""}